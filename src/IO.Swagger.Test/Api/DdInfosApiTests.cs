/* 
 * DDStore API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DdInfosApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DdInfosApiTests
    {
        private DdInfosApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DdInfosApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DdInfosApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DdInfosApi
            //Assert.IsInstanceOfType(typeof(DdInfosApi), instance, "instance is a DdInfosApi");
        }

        
        /// <summary>
        /// Test CheckIfDriverIsSupported
        /// </summary>
        [Test]
        public void CheckIfDriverIsSupportedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? ddstoreId = null;
            //string modelId = null;
            //string gtin = null;
            //string fwVersion = null;
            //string scope = null;
            //var response = instance.CheckIfDriverIsSupported(ddstoreId, modelId, gtin, fwVersion, scope);
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        
        /// <summary>
        /// Test GetDdInfo
        /// </summary>
        [Test]
        public void GetDdInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? offset = null;
            //int? limit = null;
            //string search = null;
            //string filter = null;
            //string scope = null;
            //var response = instance.GetDdInfo(offset, limit, search, filter, scope);
            //Assert.IsInstanceOf<List<DdInfo>> (response, "response is List<DdInfo>");
        }
        
    }

}
